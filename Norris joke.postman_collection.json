{
	"info": {
		"_postman_id": "91562612-dc53-46a9-b627-95388229b45f",
		"name": "Norris joke",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11238827"
	},
	"item": [
		{
			"name": "geting random joke",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Value is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.value).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Categories should be an array\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.categories).to.be.an('array');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Validate categories array is present and contains expected number of elements\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.categories).to.exist;\r",
							"    pm.expect(responseData.categories).to.be.an('array');\r",
							"    pm.expect(responseData.categories).to.have.lengthOf(0);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"icon_url is a valid URL\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.icon_url).to.match(/^https?:\\/\\/.+$/);\r",
							"});\r",
							"\r",
							"pm.test(\"url is a valid URL\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.url).to.match(/^https?:\\/\\/.+$/);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ID is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.chucknorris.io/jokes/random",
					"protocol": "https",
					"host": [
						"api",
						"chucknorris",
						"io"
					],
					"path": [
						"jokes",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "getting categories of jokes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Response array is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.chucknorris.io/jokes/categories",
					"protocol": "https",
					"host": [
						"api",
						"chucknorris",
						"io"
					],
					"path": [
						"jokes",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "joke with some category from categories",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.chucknorris.io/jokes/random?category={{category}}",
					"protocol": "https",
					"host": [
						"api",
						"chucknorris",
						"io"
					],
					"path": [
						"jokes",
						"random"
					],
					"query": [
						{
							"key": "category",
							"value": "{{category}}"
						}
					]
				}
			},
			"response": []
		}
	]
}